# Auto-generated by fogg. Do not edit
# Make improvements in fogg, so that everyone can benefit.

include scripts/common.mk

ENVS=connections-prod connections-staging czi-sci-general-prod czi-sec czi-sec-staging cztack-ci dev genepi-dev idseq-prod ie images logs lp lp-dev lp-prod-central lp-staging lp-staging-central meta-prod meta-staging playground preprod prod protocolsio sci-imaging-prod single-cell-prod staging
MODULES=alb-access-logs-datadog-lambda alb-http amundsen aws-account-baseline aws-account-baseline-regional aws-account-complete aws-ami-permissions aws-batch-env aws-batch-env-swipe aws-ci-user-crossacct aws-cloudtrail-sink aws-cloudwatch-datadog aws-cloudwatch-datadog-lambda aws-config-aggregator aws-config-organization-rules aws-config-recorder aws-datadog-exporter-role aws-dynamodb-terraform-locktable aws-elasticache-redis aws-elasticache-redis-cluster aws-elasticsearch aws-elb-access-logs-bucket aws-env aws-guardduty-master aws-guardduty-slack-notifier aws-guardduty-slack-notifier-global aws-iam-eks-pod-role aws-iam-eks-service-account-role aws-iam-policy-assume-role aws-iam-policy-document-orgwide-secrets aws-iam-policy-dynamodb-rw aws-iam-policy-ecr-reader aws-iam-policy-ecr-writer aws-iam-policy-mwaa-updater aws-iam-policy-orgwide-secrets aws-iam-policy-s3-reader aws-iam-policy-s3-writer aws-iam-role-github-action aws-iam-ses-user aws-iam-user aws-idp-oidc-okta-czi-duo aws-idp-oidc-okta-czi-prod aws-idp-okta-czi-duo aws-idp-saml-okta-czi-prod aws-instance aws-kafka aws-kinesis-stream aws-mwaa aws-rds-mariadb aws-rds-postgres aws-scp aws-secretsmanager-orgwide-secret aws-ses aws-sqs-queue aws-ssm-params aws-static-site-private bastion bless-ca cloud-custodian cloudwatch-destination-s3-archiver cloudwatch-logs-sink databricks-workspace databricks-workspace-e2 datadog-aws-integration datadog-aws-rds-integration datadog-integration-role datadog-k8s-cluster datadog-rum-proxy ecr-repository ecs-cluster ecs-fleet ecs-monitoring ecs-multi-domain-oauth-proxy ecs-multi-domain-oauth-proxy-fargate ecs-scheduled-task ecs-scheduled-task-fargate ecs-service-oauth-internal ecs-service-oauth-internal-fargate ecs-service-with-alb eks-airflow eks-aws-config-generation eks-cluster eks-debezium eks-jupyterhub eks-multi-domain-oauth-proxy eks-persistent-volume-claim eks-private-docker-registry eks-service eks-statefulset-service-with-alb eks-storage-class eng-portal fivetran_s3_role fogg-components-required-check github-actions-release golinks golinks-eks happy-env-ecs helm-service-kyverno heroku-app heroku-cloudwatch-log-drain instance-cloud-init-script jira-eks k8s-core k8s-prometheus-monitor kolide-fleet kolide-fleet-state kubernetes-aws-ssm kubernetes-secret-from-aws-param looker machine-images monitored_service myscript-proxy network-config oauth2-proxy-eks oauth2-proxy-fargate oauth2-proxy-helm-eks oauth2_proxy okta-account-baseline okta-app-oauth okta-app-oauth-head okta-auth-server okta-auth-server-rbac okta-aws-oidc-app okta-aws-saml-group okta-group okta-group-ssh-authorized-principal okta-team packer-instance-profile pager-duty-service sastisfaction secretsmanager-secret segment-javascript-proxies sentry-eks slack-ekm snowalert-ecs snowalert-eks snowflake-stage-s3-role ssh-ca-keys ssh-ca-lambda ssrfs-up superset tfe-agents-eks tfe-management wiki-eks
ACCOUNTS=covidmodeling czi-comp-bio czi-connections czi-connections-prod czi-corp czi-corp-data czi-corp-slack czi-databricks czi-id czi-images czi-investments czi-joi czi-legacy czi-logs czi-physec czi-playground czi-protocolsio czi-sci-general czi-sec czi-si czi-splunk czi-ssh czi-stp czi-tfe cztack-ci-1 cztack-ci-2 databricks-networks genepi-dev genepi-prod github hca-id hca-prod idseq-dev idseq-prod lp-databricks mccloud-dev mccloud-prod meta-2 meta-databricks-staging meta-images meta-images-ci okta-czi-prod rao-dev rao-prod sci-imaging sciencescape shasta-prod single-cell-dev single-cell-prod spacetx summitps

all: check

setup: ## set up working directory by installing dependencies
	curl -s https://raw.githubusercontent.com/chanzuckerberg/fogg/v0.66.1/download.sh | bash -s -- -b .fogg/bin v0.66.1
	.fogg/bin/fogg setup
.PHONY: setup

lint: lint-terraform ## lint the code in this repo
.PHONY: lint

lint-terraform: lint-accounts lint-envs lint-modules ## lint the terraform code in this repo
.PHONY: lint-terraform

lint-accounts:  ## lint the terrarform code in terraform/accounts
	@for account in $(ACCOUNTS); do \
		$(MAKE) -C terraform/accounts/$$account lint || exit $$?; \
	done
.PHONY: lint-accounts

lint-envs: ## lint the terraform code in terraform/envs
	@for env in $(ENVS); do \
		$(MAKE) -C terraform/envs/$$env lint || exit $$?; \
	done; \
	$(MAKE) -C terraform/global lint || exit $$?
.PHONY: lint-envs

lint-modules: ## lint the terraform code in terraform/modules
	@for module in $(MODULES); do \
		$(MAKE) -C terraform/modules/$$module lint || exit $$?; \
	done
.PHONY: lint-modules

fmt: fmt-fogg fmt-accounts fmt-envs fmt-global fmt-modules ## format code in this repo
.PHONY: fmt

fmt-fogg:
	.fogg/bin/fogg fmt
.PHONY: fmt-fogg

fmt-accounts: ## format code in terraform/accounts
	@for account in $(ACCOUNTS); do \
		$(MAKE) -C terraform/accounts/$$account fmt || exit $$?; \
	done
.PHONY: fmt-accounts

fmt-envs: ## format the code in teraform/envs
	@for env in $(ENVS); do \
		$(MAKE) -C terraform/envs/$$env fmt || exit $$?; \
	done
.PHONY: fmt-envs

fmt-global: ## format the code in terraform/global
	$(MAKE) -C terraform/global fmt || exit $$?
.PHONY: fmt-global

fmt-modules:  ## format the code in terraform/modules
	@for module in $(MODULES); do \
		$(MAKE) -C terraform/modules/$$module fmt || exit $$?; \
	done
.PHONY: fmt-modules

docs: docs-envs docs-global docs-modules ## update docs
.PHONY: docs

docs-accounts: ## update docs in terraform/accounts
	@for account in $(ACCOUNTS); do \
		$(MAKE) -C terraform/accounts/$$account docs || exit $$?; \
	done
.PHONY: docs-accounts

docs-envs: ## update the docs in terraform/envs
	@for env in $(ENVS); do \
		$(MAKE) -C terraform/envs/$$env docs || exit $$?; \
	done
.PHONY: docs-envs

docs-global: ## update the docs in terraform/global
	$(MAKE) -C terraform/global docs || exit $$?;
.PHONY: docs-global

docs-modules: ## update the docs in terraform/modules
	@for module in $(MODULES); do \
		$(MAKE) -C terraform/modules/$$module docs || exit $$?; \
	done
.PHONY: docs-modules

test:
.PHONY: test

check: check-plan check-docs ## check all code in the repo
.PHONY: check

check-plan: check-plan-accounts check-plan-envs check-plan-global ## check terraform plans across all components
.PHONY: check-plan

check-plan-accounts: ## check terraform plans in terraform/accounts
	@for account in $(ACCOUNTS); do \
		$(MAKE) -C terraform/accounts/$$account check-plan || exit $$?; \
	done
.PHONY: check-plan-accounts

check-plan-envs: ## check terraform plans in terraform/envs
	@for env in $(ENVS); do \
		$(MAKE) -C terraform/envs/$$env check-plan || exit $$?; \
	done
.PHONY: check-plan-envs

check-plan-global: ## check terraform plans in terraform/global
	$(MAKE) -C terraform/global check-plan || exit $$?
.PHONY: check-plan-global

check-docs: ## check terraform docs
	@for mod in $(MODULES); do \
		$(MAKE) -C terraform/modules/$$module check-docs || exit $$?; \
	done
.PHONY: check-docs

clean: clean-accounts clean-envs clean-global ## clean the repo
.PHONY: clean

clean-accounts: ## clean in terraform/accounts
	@for account in $(ACCOUNTS); do \
		$(MAKE) -C terraform/accounts/$$account clean || exit $$?; \
	done
.PHONY: clean-accounts

clean-envs: ## clean in terraform/envs
	@for env in $(ENVS); do \
		$(MAKE) -C terraform/envs/$$env clean || exit $$?; \
	done
.PHONY: clean-envs

clean-global: ## clean in terraform/global
	$(MAKE) -C terraform/global clean || exit $$?
.PHONY: clean-global


help: ## display help for this makefile
	@fgrep -h "##" $(MAKEFILE_LIST) | fgrep -v fgrep | sed -e 's/\\$$//' | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'
.PHONY: help

