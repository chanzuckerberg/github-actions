name: "Get GitHub Ref Names"
description: |
  A script that will attempt to get the current branch and upsream's default branch names.
  Works when GitHub action triggers are pull_request or push.
  Will also attempt to calculate docker-build-and-push's cache_from.

  NOTE: doesn't yet work when tags are pushed, only branches.

outputs:
  headRef:
    description: "The name of our branch's ref"
    value: ${{ steps.refs.outputs.headRef }}
  headSha:
    description: "The sha of our branch's ref"
    value: ${{ steps.refs.outputs.headSha }}
  baseRef:
    description: "The name of the upstream's default ref"
    value: ${{ steps.refs.outputs.baseRef }}

runs:
  using: "composite"
  steps:
    - name: Calculate Refs
      id: refs
      uses: actions/github-script@v7
      with:
        script: |
          let eventName = context.eventName;
          let baseRef;
          let headRef;
          let headSha;

          // TODO: what do we do wrt characters not allowed in docker tags?
          if (eventName === "pull_request") {
            headRef = context.payload.pull_request.headRef.ref;
            headSha = context.payload.pull_request.head.sha;
            baseRef = context.payload.pull_request.baseRef.ref;
          } else if (eventName === "push") {
            // TODO: this won't work with tags
            const pruneHead = "refs/heads/";
            headRef = context.payload.ref.substring(pruneHead.length);
            headSha = context.sha;
            baseRef = context.payload.repository.default_branch;
          } else if (eventName === "delete") {
            headRef = context.payload.repository.default_branch;
            headSha = context.sha;
            baseRef = context.payload.ref;
          } else if (eventName === "release") {
            headRef = context.payload.repository.default_branch;
            headSha = context.sha;
            baseRef = context.payload.repository.default_branch;
          } else {
            core.setFailed(`EventName ${eventName} not supported`);
            return;
          }

          core.setOutput("headRef", headRef);
          core.setOutput("headSha", headSha);
          core.setOutput("baseRef", baseRef);
          console.log(`Calculated the following ${JSON.stringify({eventName,baseRef,headRef,headSha}, null, 2)}`);
