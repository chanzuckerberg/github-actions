name: Happy Cleanup
description: Will list happy stacks in an environment and delete those that have not been updated in a while.
inputs:
  env:
    description: The environment in which to delete stacks
    required: true
    default: rdev
  time:
    description: The longest period before a stack should be considered stale. Should be something like '2 weeks' or '1 day'
    required: true
    default: 2 weeks
  exclude:
    description: Exclude stacks with these substrings in the stackname
    required: false
  tfe_token:
    description: A Terraform Enterprise API token to be used with your happy organization
    required: true
  happy_version:
    description: The version of happy to use
    required: true
    default: latest
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
    - name: Install happy
      uses: chanzuckerberg/github-actions/.github/actions/install-happy@main
      with:
        happy_version: ${{ inputs.happy_version }}
    - name: Delete stale stacks
      env:
        ENV: ${{ inputs.env }}        
        TFE_TOKEN: ${{ inputs.tfe_token }}
        TIME: ${{inputs.time}}
        EXCLUDE: ${{ inputs.exclude }}
      shell: bash
      run: |
        set -ue
        set -o pipefail

        date=`date +%Y-%m-%d'T'%H:%M'Z' -d "$TIME ago"`
        if [[ ! -z ${EXCLUDE} ]]; then
          for i in $(happy list --aws-profile "" --output json --env $ENV | jq -r --arg date "$date" --arg exclude "$EXCLUDE" '.[] | select(.last_updated < $date) | select(any(.stack; contains($exclude))|not) | .stack'); do
            happy delete $i --env $ENV --aws-profile ""
          done
          exit
        fi
        for i in $(happy list --aws-profile "" --output json --env $ENV | jq -r --arg date "$date" '.[] | select(.last_updated < $date) | .stack'); do
          happy delete $i --env $ENV --aws-profile ""
        done
    

