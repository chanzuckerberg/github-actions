name: check-branch-match
description: Check if the current branch matches the specified filters

inputs:
  branches_include:
    description: 'Branch names to run this job on, supports wildcards, comma delimited'
    required: false
    default: '*'
  branches_ignore:
    description: 'Branch names to run this job on, supports wildcards, comma delimited'
    required: false
    default: ''
  ref:
    description: 'The branch to check'
    required: false
    default: ${{ github.ref }}

outputs:
  match:
    description: Whether the current branch matches the filters
    value: ${{ steps.branch_filter.outputs.match }}

runs:
  using: composite
  steps:
    - name: Check for matching branch
      id: branch_filter
      uses: actions/github-script@v7
      with:
        script: |
          function wildcardMatch(text, pattern) {
            const regexPattern =
            new RegExp('^' + pattern.replace(/\?/g, '.').replace(/\*/g, '.*') + '$');
            return regexPattern.test(text);
          }

          const branchesInclude = `${{ inputs.branches_include }}`.split(',').map(b => b.trim()).filter(b => b.length > 0);
          console.log('Branches to run against:', branchesInclude);

          const branchesIgnore = `${{ inputs.branches_ignore }}`.split(',').map(b => b.trim()).filter(b => b.length > 0);
          console.log('Branches to ignore:', branchesIgnore);

          const branch = `${{ inputs.ref }}`.replace('refs/heads/', '');
          const isMatch = branchesInclude.some(b => wildcardMatch(branch, b)) && !branchesIgnore.some(b => wildcardMatch(branch, b));

          if (isMatch) {
            console.log('Branch name matches the filters');
          } else {
            console.log(`"${branch}" does not match the filters`);
          }

          core.setOutput('match', isMatch);
