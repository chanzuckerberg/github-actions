name: Release please
description: Runs release please and tags unpinned major and minor versions
inputs:
  app_token:
    description: 'App token obtained using create-github-app-token'
    required: true
  include_component_in_tag:
    description: 'If true, add prefix to tags and branches, allowing multiple libraries to be released from the same repository.'
    required: false
    default: false
runs:
  using: "composite"
  steps:
    - name: release please
      uses: googleapis/release-please-action@v4
      id: release
      with:
        token: ${{ inputs.app_token }}
        include-component-in-tag: ${{ inputs.include_component_in_tag }}
    - uses: actions/checkout@v4
    - name: tag root major and minor versions
      shell: bash
      run: |
        git config user.name czi-github-helper[bot]
        git config user.email 95879977+czi-github-helper[bot]@users.noreply.github.com
        git tag -d v${{ steps.release.outputs.major }} || true
        git tag -d v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
        git push origin :v${{ steps.release.outputs.major }} || true
        git push origin :v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
        git tag -a v${{ steps.release.outputs.major }} -m "Release v${{ steps.release.outputs.major }}"
        git tag -a v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} -m "Release v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}"
        git push origin v${{ steps.release.outputs.major }}
        git push origin v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}
      if: ${{ steps.release.outputs.release_created }}
    - name: tag component major and minor versions
      if: ${{ steps.release.outputs.release_created }}
      uses: actions/github-script@v7
      env:
        release_output: ${{ toJSON(steps.release.outputs) }}
      with:
        result-encoding: string
        script: |
          await exec.exec('git config user.name czi-github-helper[bot]')
          await exec.exec('git config user.email 95879977+czi-github-helper[bot]@users.noreply.github.com')
          
          const outputs = JSON.parse(process.env.release_output);
          // for some reason pathsReleased is a string and not an array within the JSON
          const pathsReleased = JSON.parse(outputs.paths_released);
          console.log(`pathsReleased: ${pathsReleased}`);
          for (let i = 0; i < pathsReleased.length; i++) {
            let releasePath = pathsReleased[i];
            if (releasePath === ".") {
                  // ignore root package
                  continue;
            }
            const major = outputs[`${releasePath}--major`];
            const minor = outputs[`${releasePath}--minor`];
            const package_name = outputs[`${releasePath}--name`].split(":")[0];
            
            console.log(`Creating ${major}.${minor} releases for ${package_name}`);

            const cmdOpts = {
              ignoreReturnCode: true
            };
            await exec.exec('git', ["tag", "-d", `${package_name}-v${major}`], cmdOpts);
            await exec.exec('git', ["tag", "-d", `${package_name}-v${major}.${minor}`], cmdOpts);
            await exec.exec('git', ["push", "origin", `:${package_name}-v${major}`], cmdOpts)
            await exec.exec('git', ["push", "origin", `:${package_name}-v${major}.${minor}`], cmdOpts)
            await exec.exec('git', ["tag", "-a", `${package_name}-v${major}`, "-m", `Release v${major}`])
            await exec.exec('git', ["tag", "-a", `${package_name}-v${major}.${minor}`, "-m", `Release v${major}.${minor}`])
            await exec.exec('git', ["push", "origin", `${package_name}-v${major}`])
            await exec.exec('git', ["push", "origin", `${package_name}-v${major}.${minor}`])
          }
