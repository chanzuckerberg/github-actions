name: Matched Jira Marker
description: Get the Jira issue reference from the Jira issue marker in a pull request body

inputs:
  pullRequestBody:
    description: The Github PR body
    required: true
    type: string
  projectKey:
    description: The Jira project key
    required: true
    type: string

outputs:
  jiraIssueMarker:
    description: 'The full marker used to encapsulate Jira issue reference and details (eg: <!--JIRA_VALIDATE_START...<!--JIRA_VALIDATE_END:do not remove this marker as it will break the jira validation functionality-->\n\n---\n\n)'
    value: ${{ steps.getJiraIssueReferenceFromMarker.outputs.jiraIssueMarker }}
  jiraIssueReference:
    description: 'A Jira issue reference (eg: CCIE-1234)'
    value: ${{ steps.getJiraIssueReferenceFromMarker.outputs.jiraIssueReference }}

runs:
  using: composite
  steps:
    - name: Get Jira Issue Reference From Marker
      id: getJiraIssueReferenceFromMarker
      uses: actions/github-script@v6
      with:
        script: |
          const pullRequestBody = ${{ inputs.pullRequestBody }};
          if (!pullRequestBody) {
            return;
          }

          const markerRegex = new RegExp(`<!--JIRA_VALIDATE_START:(${{ inputs.projectKey }}-\\d+):do not remove this marker as it will break the jira validation functionality-->[\\s\\S]+<!--JIRA_VALIDATE_END:do not remove this marker as it will break the jira validation functionality-->\\s+---\\s+`);
          const markerMatch = pullRequestBody.match(markerRegex);
          if (!markerMatch || markerMatch.length < 2) {
            console.log('No Jira marker found in PR body');
            return;
          }

          const jiraIssueMarker = escape(markerMatch[0]);
          console.log('Setting jiraIssueMarker to:', jiraIssueMarker);
          core.setOutput('jiraIssueMarker', jiraIssueMarker);

          const jiraIssueReference = markerMatch[1];
          console.log('Setting jiraIssueReference to:', jiraIssueReference);
          core.setOutput('jiraIssueReference', jiraIssueReference);
