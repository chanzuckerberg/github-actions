name: "Docker Build and Push"
description: "Will build and push a docker iamge."
inputs:
  dockerfile:
    description: "Path to the Dockerfile to be built."
    required: true
    default: "Dockerfile"
  context:
    description: "Path to the Docker build context."
    required: true
    default: "."
  name:
    description: "Name of the built docker image."
    required: true
  registry:
    description: "URI for your docker registry. Typically an ECR registry."
    required: true
  build_args:
    description: "A list of build arguments to pass to the docker build."
    required: false
  custom_tag:
    description: "A single custom tag to apply to the built image."
    required: false
    default: ""
outputs:
  tags:
    description: "The tags we built and pushed"
    value: ${{ steps.meta.outputs.tags }}
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ inputs.registry }}/${{ inputs.name }}
        tags: |
          type=ref,event=branch,prefix=branch-
          type=ref,event=pr,prefix=pr-
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix=sha-
          type=sha,format=long,prefix=sha-
          ${{ inputs.custom_tag }}
    - name: Login to ECR
      uses: docker/login-action@v1
      with:
        registry: ${{ inputs.registry }}
    - name: Calculate Branch and Base Names
      id: refs
      uses: chanzuckerberg/github-actions/.github/actions/get-github-ref-names@get-github-ref-names-v1.5.0
    - name: Calculate Cache-From
      id: cache-from
      uses: actions/github-script@v6
      with:
        script: |
          let cacheFrom = [
            "${{ steps.refs.outputs.baseRef }}",
            "${{ steps.refs.outputs.headRef }}",
          ].map(ref => ref.replaceAll(/[^a-zA-Z0-9/-]+/g, "-"))
            .map(ref => `type=registry,ref=${{ inputs.registry }}/${{ inputs.name }}:branch-${ref}`).join('\r\n');
          console.log(`Will use cached images from ${JSON.stringify(cacheFrom, null, 2)}`);
          core.setOutput("cacheFrom", cacheFrom);

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        file: ${{ inputs.dockerfile }}
        context: ${{ inputs.context }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: ${{ steps.cache-from.outputs.cacheFrom }}
        cache-to: |
          type=inline,mode=max
        build-args: ${{ inputs.build_args }}
