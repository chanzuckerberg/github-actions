name: "Docker Build and Push"
description: "Will build and push a docker iamge."
inputs:
  dockerfile:
    description: "Path to the Dockerfile to be built."
    required: true
    default: "Dockerfile"
  context:
    description: "Path to the Docker build context."
    required: true
    default: "."
  name:
    description: "Name of the built docker image."
    required: true
  registry:
    description: "URI for your docker registry. Typically an ECR registry."
    required: true
outputs:
  tags:
    description: "The tags we built and pushed"
    value: ${{ steps.meta.outputs.tags }}
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ inputs.registry }}/${{ inputs.name }}
        tags: |
          type=ref,event=branch,prefix=branch-
          type=ref,event=pr,prefix=pr-
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix=sha-
          type=sha,format=long,prefix=sha-
    - name: Login to ECR
      uses: docker/login-action@v1
      with:
        registry: ${{ inputs.registry }}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        file: ${{ inputs.dockerfile }}
        context: ${{ inputs.context }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: |
          type=gha
          type=registry,ref=${{ inputs.registry }}/${{ inputs.name }}:branch-${{ context.payload.pull_requesst.base.ref }}
          type=registry,ref=${{ inputs.registry }}/${{ inputs.name }}:branch-${{ context.payload.pull_requesst.head.ref }}
        cache-to: |
          type=gha,mode=max
          type=inline,mode=max

# context.payload.pull_request.base.ref
# context.payload.pull_request.head.ref
# --cache-from=type=registry,ref=${{ secrets.ECR_REPO }}/${{ matrix.image.name }}:branch-trunk
# --cache-to=type=inline,mode=max
# --cache-from ${{ secrets.ECR_REPO }}/${{ matrix.image.name }}:branch-${GITHUB_REF##*/}
