name: Deploy Action

on:
  workflow_call:
    inputs: 
      store_id:
        description: "The OpenFGA Store ID"
        required: true
        type: string
      api_url:
        description: "The URL of the OpenFGA API"
        required: true
        type: string
      model_file_path:
        description: "The path to the model file"
        required: true
        type: string
      env_file_path:
        description: "The path to the argus configuration YAML file where the authorization_model_id should be checked into"
        required: true
        type: string
      env_variable_key:
        description: "The key of the environment variable to be updated"
        required: false
        type: string
        default: "OPENFGA_AUTHZ_MODEL_ID"
    secrets:
      openfga_token:
        description: "The OpenFGA API Token"
        required: true

jobs:
  deploy:
    permissions:
      id-token: write
      contents: write
      pull-requests: write
    name: Deploy Authorization Model
    runs-on: [ARM64,self-hosted,Linux]
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            model:
              - '${{ inputs.model_file_path }}'
      - if: steps.changes.outputs.model == 'true'
        name: Deploy using a file
        id: deploy-openfga
        uses: openfga/action-openfga-deploy@v0.1.1
        with:
          api-url: ${{ inputs.api_url }}
          api-token: ${{ secrets.openfga_token }}
          store-id: ${{ inputs.store_id }}
          model-file-path: ${{ inputs.model_file_path }} 
      - if: steps.changes.outputs.model == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - if: steps.changes.outputs.model == 'true'
        run: npm install yaml
        shell: bash 
      - if: steps.changes.outputs.model == 'true'
        name: Write the authorization model ID
        uses: actions/github-script@v6
        with:
          script: |
            const YAML = require('yaml');
            const fs = require('fs');

            const filePath = '${{ inputs.env_file_path }}';
            const envVariableKey = '${{ inputs.env_variable_key }}';
            const authorizationModelId = '${{ steps.deploy-openfga.outputs.authorization_model_id }}';

            const fileContent = fs.readFileSync(filePath, 'utf8');
            const doc = YAML.parseDocument(fileContent);
            console.log("old value: ", doc.toString());

            for (const [key, value] of Object.entries(doc.toJS().stack.services)) {
              if (!value.env) continue;
              value.env.map((item, i) => {
                if (item.name === envVariableKey) {
                  doc.deleteIn(['stack', 'services', key, 'env', i]);
                  doc.addIn(['stack', 'services', key, 'env'], { name: item.name, value: authorizationModelId });
                }
              });
            }

            console.log("new value: ", doc.toString());
            fs.writeFileSync(filePath, doc.toString());
      - if: steps.changes.outputs.model == 'true'
        name: Update YAML configuration
        uses: EndBug/add-and-commit@v9
        with:
          add: ${{ inputs.env_file_path }}
          message: 'chore: Updated ${{ inputs.env_file_path }} ${{ inputs.env_variable_key }} to ${{ steps.deploy-openfga.outputs.authorization_model_id }}'

